

#include "inc/tm4c123gh6pm.h"
#include<stdint.h>
#include<stdbool.h>
//void UART_Init(void);
void Delay(unsigned long counter);
void printstring(char *str);
char UART_InChar(void);
void UART_OutChar(char data);
char UART_InCharNonBlocking(void);
int main(void)
{
    //char data='A';

    SYSCTL_RCGCUART_R |= 0x00000001;  // activate UART0

    SYSCTL_RCGCGPIO_R |= 0x00000001;  // activate port A

    UART0_CTL_R &= ~0x00000001;    // disable UART0

    UART0_IBRD_R = 8;     // IBRD = int(16,000,000/(16*115,200)) = int(43.40278)

    UART0_FBRD_R = 44;     // FBRD = round(0.40278 * 64) = 26

    UART0_LCRH_R = 0x00000060;  // 8 bit, no parity bits, one stop, FIFOs

    UART0_CTL_R |= 0x00000001;     // enable UART

    GPIO_PORTA_AFSEL_R |= 0x03;    // enable alt funct on PC5-4

    GPIO_PORTA_DEN_R |= 0x03;      // configure PC5-4 as UART1

    GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R&0xFFFFFF00)+0x00000011;

    GPIO_PORTA_AMSEL_R &= ~0x03;   // disable analog on PC5-4


    Delay(1);
  printstring("Hello World \n");
  Delay(10);
  while(1)
  {
      char c = UART_InChar();          /* get a character from UART0 */
      UART_OutChar(c);
  }



}

//void UART_Init(void)
//{            // should be called only once


//}

// Wait for new input, then return ASCII code

char UART_InChar(void)
{
  char data;
  while((UART0_FR_R&0x0010) != 0);      // wait until RXFE is 0
  data=UART0_DR_R;
  return (unsigned char) data;

}

// Wait for buffer to be not full, then output

void UART_OutChar(char data)
{

  while((UART0_FR_R&0x0020) != 0);      // wait until TXFF is 0
  UART0_DR_R = data;

}

// Immediately return input or 0 if no input

char UART_InCharNonBlocking(void)
{

  if((UART0_FR_R&UART_FR_RXFE) == 0)
  {

    return((char)(UART0_DR_R));

  }
  else
  {

    return 0;

  }

}
void printstring(char *str)
{
  while(*str)
    {
      UART_OutChar(*(str++));
    }
}
void Delay(unsigned long counter)

{
    unsigned long i = 0;

    for(i=0; i< counter; i++);
}
